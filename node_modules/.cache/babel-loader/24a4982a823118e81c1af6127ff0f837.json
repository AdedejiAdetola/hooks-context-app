{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\web\\\\hooks-context-app\\\\src\\\\contexts\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\nconst AuthContextProvider = props => {\n  _s();\n\n  const [isAuthenticated, setisAuthenticated] = useState(false);\n\n  const toggleAuth = () => {\n    setisAuthenticated(!isAuthenticated);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      toggleAuth: toggleAuth\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"dfxhEGfyoK5oH2r82RpbYFNNTCo=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/USER/Documents/web/hooks-context-app/src/contexts/AuthContext.js"],"names":["React","createContext","useState","AuthContext","AuthContextProvider","props","isAuthenticated","setisAuthenticated","toggleAuth","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;;AAEP,MAAMG,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMM,UAAU,GAAG,MAAM;AACrBD,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACH,GAFD;;AAGA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACA,MAAAA,eAAD;AAAkBE,MAAAA,UAAU,EAACA;AAA7B,KAA7B;AAAA,cACKH,KAAK,CAACI;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAXD;;GAAML,mB;;KAAAA,mB;AAaN,eAAeA,mBAAf","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = (props) => {\r\n    const [isAuthenticated, setisAuthenticated] = useState(false);\r\n\r\n    const toggleAuth = () => {\r\n        setisAuthenticated(!isAuthenticated);\r\n    }\r\n    return ( \r\n        <AuthContext.Provider value={{isAuthenticated, toggleAuth:toggleAuth}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n     );\r\n}\r\n \r\nexport default AuthContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}