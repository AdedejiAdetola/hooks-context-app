{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\web\\\\hooks-context-app\\\\src\\\\contexts\\\\ThemeContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\n\nconst ThemeContextProvider = props => {\n  _s();\n\n  const [isLightTheme, setisLightTheme] = useState(true);\n  const light = {\n    syntax: '#555',\n    ui: '#ddd',\n    bg: '#eee'\n  };\n  const dark = {\n    syntax: '#ddd',\n    ui: '#333',\n    bg: '#555'\n  };\n\n  const toggleTheme = () => {\n    setisLightTheme(!isLightTheme);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isLightTheme,\n      light,\n      dark,\n      toggleTheme: toggleTheme\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeContextProvider, \"pf1/v4F1cToh551bj2T15MdV5sQ=\");\n\n_c = ThemeContextProvider;\nexport default ThemeContextProvider; //import React, { createContext } from 'react';\n//create context\n//export const ThemeContext =createContext();\n//create class Component\n//class ThemeContextProvider extends React.Component {\n//state created in cc\n//state =  {\n//isLightTheme: true,\n//light: {syntax: '#555', //ui:'#ddd', bg:'#eee'},\n//dark: {syntax: '#ddd', //ui:'#333', bg:'#555'}   \n//   };\n//   toggleTheme = () => {\n//      this.setState({isLightTheme: !this.state.isLightTheme})\n//  }\n//render() { \n//return (\n//state passed into themeContext\n//this.props.children refers to the children in which the theme context wraps #navbar and booklist.\n//the children are attached to the props\n//    <ThemeContext.Provider //value={{...this.state, toggleTheme: this.toggleTheme}}>\n//        {this.props.children}\n//    </ThemeContext.Provider>\n//        )\n//    }\n//}\n//export default ThemeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"sources":["C:/Users/USER/Documents/web/hooks-context-app/src/contexts/ThemeContext.js"],"names":["React","useState","createContext","ThemeContext","ThemeContextProvider","props","isLightTheme","setisLightTheme","light","syntax","ui","bg","dark","toggleTheme","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,YAAY,gBAAGD,aAAa,EAAlC;;AAEP,MAAME,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMO,KAAK,GAAG;AAACC,IAAAA,MAAM,EAAE,MAAT;AAAiBC,IAAAA,EAAE,EAAC,MAApB;AAA4BC,IAAAA,EAAE,EAAC;AAA/B,GAAd;AAEA,QAAMC,IAAI,GAAO;AAACH,IAAAA,MAAM,EAAE,MAAT;AAAiBC,IAAAA,EAAE,EAAC,MAApB;AAA4BC,IAAAA,EAAE,EAAC;AAA/B,GAAjB;;AAEA,QAAME,WAAW,GAAG,MAAM;AACtBN,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH,GAFD;;AAIA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACA,MAAAA,YAAD;AAAeE,MAAAA,KAAf;AAAsBI,MAAAA,IAAtB;AAA4BC,MAAAA,WAAW,EAACA;AAAxC,KAA9B;AAAA,cACKR,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBD;;GAAMV,oB;;KAAAA,oB;AAkBN,eAAeA,oBAAf,C,CAMA;AAEA;AAEA;AAEA;AAEA;AACI;AACA;AACK;AACA;AACA;AACR;AAEA;AACA;AACC;AAEE;AAEI;AACI;AACA;AACA;AACJ;AACA;AACA;AACR;AACA;AACA;AAEA","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n    const [isLightTheme, setisLightTheme] = useState(true);\r\n\r\n    const light = {syntax: '#555', ui:'#ddd', bg:'#eee'};\r\n\r\n    const dark =     {syntax: '#ddd', ui:'#333', bg:'#555'};\r\n\r\n    const toggleTheme = () => {\r\n        setisLightTheme(!isLightTheme);\r\n    }\r\n\r\n    return ( \r\n        <ThemeContext.Provider value={{isLightTheme, light, dark, toggleTheme:toggleTheme}}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n     );\r\n}\r\n \r\nexport default ThemeContextProvider;\r\n\r\n\r\n\r\n\r\n\r\n//import React, { createContext } from 'react';\r\n\r\n//create context\r\n\r\n//export const ThemeContext =createContext();\r\n\r\n//create class Component\r\n\r\n//class ThemeContextProvider extends React.Component {\r\n    //state created in cc\r\n    //state =  {\r\n         //isLightTheme: true,\r\n         //light: {syntax: '#555', //ui:'#ddd', bg:'#eee'},\r\n         //dark: {syntax: '#ddd', //ui:'#333', bg:'#555'}   \r\n //   };\r\n\r\n //   toggleTheme = () => {\r\n //      this.setState({isLightTheme: !this.state.isLightTheme})\r\n  //  }\r\n\r\n    //render() { \r\n        \r\n        //return (\r\n            //state passed into themeContext\r\n            //this.props.children refers to the children in which the theme context wraps #navbar and booklist.\r\n            //the children are attached to the props\r\n        //    <ThemeContext.Provider //value={{...this.state, toggleTheme: this.toggleTheme}}>\r\n        //        {this.props.children}\r\n        //    </ThemeContext.Provider>\r\n//        )\r\n//    }\r\n//}\r\n \r\n//export default ThemeContextProvider;"]},"metadata":{},"sourceType":"module"}