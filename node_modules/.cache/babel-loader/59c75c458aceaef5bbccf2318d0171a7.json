{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\web\\\\hooks-context-app\\\\src\\\\contexts\\\\AuthContext.js\";\nimport React, { createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nclass AuthContextProvider extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isAuthenticated: false\n    };\n\n    this.toggleAuth = () => {\n      this.setState({\n        isAuthenticated: !this.state.isAuthenticated\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: { ...this.state,\n        toggleAuth: this.toggleAuth\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["C:/Users/USER/Documents/web/hooks-context-app/src/contexts/AuthContext.js"],"names":["React","createContext","AuthContext","AuthContextProvider","Component","state","isAuthenticated","toggleAuth","setState","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAEA,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;;AACA,MAAME,mBAAN,SAAkCH,KAAK,CAACI,SAAxC,CAAkD;AAAA;AAAA;AAAA,SAC9CC,KAD8C,GACvC;AACHC,MAAAA,eAAe,EAAE;AADd,KADuC;;AAAA,SAK9CC,UAL8C,GAKjC,MAAM;AACf,WAAKC,QAAL,CAAc;AAACF,QAAAA,eAAe,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA9B,OAAd;AACH,KAP6C;AAAA;;AAQ9CG,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,EAAC,GAAG,KAAKJ,KAAT;AAAgBE,QAAAA,UAAU,EAAE,KAAKA;AAAjC,OAA7B;AAAA,gBACK,KAAKG,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAd6C;;AAiBlD,eAAeR,mBAAf","sourcesContent":["import React, { createContext } from 'react';\r\n\r\nconst AuthContext = createContext();\r\nclass AuthContextProvider extends React.Component {\r\n    state= {\r\n        isAuthenticated: false\r\n    };\r\n\r\n    toggleAuth = () => {\r\n        this.setState({isAuthenticated: !this.state.isAuthenticated})\r\n    }\r\n    render() { \r\n        return (\r\n            <AuthContext.Provider value={{...this.state, toggleAuth: this.toggleAuth}}>\r\n                {this.props.children}\r\n            </AuthContext.Provider>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AuthContextProvider;"]},"metadata":{},"sourceType":"module"}